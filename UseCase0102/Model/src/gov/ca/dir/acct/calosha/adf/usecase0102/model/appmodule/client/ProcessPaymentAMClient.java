package gov.ca.dir.acct.calosha.adf.usecase0102.model.appmodule.client;

import gov.ca.dir.acct.calosha.adf.usecase0102.model.appmodule.common.ProcessPaymentAM;

import java.util.Map;

import oracle.jbo.client.remote.ApplicationModuleImpl;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 12 19:59:38 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProcessPaymentAMClient extends ApplicationModuleImpl implements ProcessPaymentAM {
    /**
     * This is the default constructor (do not remove).
     */
    public ProcessPaymentAMClient() {
    }


    public void createUnappliedPaymentAllocation(Number inspectionId,
                                                 Number paymentId,
                                                 Number unbilledItemId,
                                                 Number allocatedAmount,
                                                 String comments) {
        Object _ret =
            this.riInvokeExportedMethod(this,"createUnappliedPaymentAllocation",new String [] {"oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","java.lang.String"},new Object[] {inspectionId, paymentId, unbilledItemId, allocatedAmount, comments});
        return;
    }


    public void setAllocatedItems(Map allocatedItems) {
        Object _ret =
            this.riInvokeExportedMethod(this,"setAllocatedItems",new String [] {"java.util.Map<>"},new Object[] {allocatedItems});
        return;
    }

    public Map getAllocatedItems() {
        Object _ret =
            this.riInvokeExportedMethod(this,"getAllocatedItems",null,null);
        return (Map)_ret;
    }


    public void createPaymentAllocation(String allocationTypeCode,
                                        Number citationId,
                                        Number citationItemId,
                                        Number inspectionId, Number paymentId,
                                        Number unbilledItemId,
                                        Date allocationDate,
                                        Number allocatedAmount,
                                        String comments, String itemType) {
        Object _ret =
            this.riInvokeExportedMethod(this,"createPaymentAllocation",new String [] {"java.lang.String","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Date","oracle.jbo.domain.Number","java.lang.String","java.lang.String"},new Object[] {allocationTypeCode, citationId, citationItemId, inspectionId, paymentId, unbilledItemId, allocationDate, allocatedAmount, comments, itemType});
        return;
    }


    public Number getUnbilledItemIdSequence() {
        Object _ret =
            this.riInvokeExportedMethod(this,"getUnbilledItemIdSequence",null,null);
        return (Number)_ret;
    }

    public Number getUnappliedUnbilledItemId() {
        Object _ret =
            this.riInvokeExportedMethod(this,"getUnappliedUnbilledItemId",null,null);
        return (Number)_ret;
    }

    public Number getPaymentIdSequence() {
        Object _ret =
            this.riInvokeExportedMethod(this,"getPaymentIdSequence",null,null);
        return (Number)_ret;
    }

    public void createRelatedParty(Number paymentId) {
        Object _ret =
            this.riInvokeExportedMethod(this,"createRelatedParty",new String [] {"oracle.jbo.domain.Number"},new Object[] {paymentId});
        return;
    }

    public void commitProcessPayment() {
        Object _ret =
            this.riInvokeExportedMethod(this,"commitProcessPayment",null,null);
        return;
    }

    public Number getPaymentId() {
        Object _ret = this.riInvokeExportedMethod(this,"getPaymentId",null,null);
        return (Number)_ret;
    }

    public void createUnappliedPaymentAllocation() {
        Object _ret =
            this.riInvokeExportedMethod(this,"createUnappliedPaymentAllocation",null,null);
        return;
    }

    public void setPaymentId(Number paymentId) {
        Object _ret =
            this.riInvokeExportedMethod(this,"setPaymentId",new String [] {"oracle.jbo.domain.Number"},new Object[] {paymentId});
        return;
    }

    public void setIsPaymentExist(boolean isPaymentExist) {
        Object _ret =
            this.riInvokeExportedMethod(this,"setIsPaymentExist",new String [] {"boolean"},new Object[] {new Boolean(isPaymentExist)});
        return;
    }

    public void processPayments() {
        Object _ret =
            this.riInvokeExportedMethod(this,"processPayments",null,null);
        return;
    }

    public void allocatePaymentAmount() {
        Object _ret =
            this.riInvokeExportedMethod(this,"allocatePaymentAmount",null,null);
        return;
    }

    public void undoPaymentAllocations() {
        Object _ret =
            this.riInvokeExportedMethod(this,"undoPaymentAllocations",null,null);
        return;
    }

    public void allocatePaymentAmount(Double paymentAmount) {
        Object _ret =
            this.riInvokeExportedMethod(this,"allocatePaymentAmount",new String [] {"java.lang.Double"},new Object[] {paymentAmount});
        return;
    }

    public Number ifCreateDepositTransmittal(String depositSlipNumber,
                                             Date transmittalDate,
                                             String paymentType) {
        Object _ret =
            this.riInvokeExportedMethod(this,"ifCreateDepositTransmittal",new String [] {"java.lang.String","oracle.jbo.domain.Date","java.lang.String"},new Object[] {depositSlipNumber, transmittalDate, paymentType});
        return (Number)_ret;
    }

    public void createPaymentAllocation(String allocationTypeCode,
                                        Number citationId,
                                        Number citationItemId,
                                        Number inspectionId, Number paymentId,
                                        Number unbilledItemId,
                                        Date allocationDate,
                                        Number allocatedAmount,
                                        String comments, String itemType,
                                        String referenceNumber) {
        Object _ret =
            this.riInvokeExportedMethod(this,"createPaymentAllocation",new String [] {"java.lang.String","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Number","oracle.jbo.domain.Date","oracle.jbo.domain.Number","java.lang.String","java.lang.String","java.lang.String"},new Object[] {allocationTypeCode, citationId, citationItemId, inspectionId, paymentId, unbilledItemId, allocationDate, allocatedAmount, comments, itemType, referenceNumber});
        return;
    }

    public void setVarReferenceNumber(String varReferenceNumber) {
        Object _ret =
            this.riInvokeExportedMethod(this,"setVarReferenceNumber",new String [] {"java.lang.String"},new Object[] {varReferenceNumber});
        return;
    }

    public boolean isTPCReferred(String invoiceNumber) {
        Object _ret =
            this.riInvokeExportedMethod(this,"isTPCReferred",new String [] {"java.lang.String"},new Object[] {invoiceNumber});
        return ((Boolean)_ret).booleanValue();
    }

    public String getPaymentTypeCode() {
        Object _ret =
            this.riInvokeExportedMethod(this,"getPaymentTypeCode",null,null);
        return (String)_ret;
    }

    public void recalculateUnappliedAfterManualAllocation() {
        Object _ret =
            this.riInvokeExportedMethod(this,"recalculateUnappliedAfterManualAllocation",null,null);
        return;
    }
}
